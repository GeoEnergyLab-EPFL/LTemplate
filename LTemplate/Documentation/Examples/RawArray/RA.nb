Notebook[{

Cell[CellGroupData[{
Cell["Working with RawArrays", \
"Section",ExpressionUUID->"fff5ad90-c711-4958-b676-be343cf900c3"],

Cell[TextData[{
 "This example demonstrates working with RawArrays. It requires Mathematica \
11.1 or later because it uses the ",
 Cell[BoxData[
  ButtonBox["BinarySerialize",
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://reference.wolfram.com/language/ref/BinarySerialize.html"], 
     None},
   ButtonNote->
    "http://reference.wolfram.com/language/ref/BinarySerialize.html"]],
  ExpressionUUID->"b73d0c21-921c-40e5-a0f1-bf9368919810"],
 " function."
}], "Text",ExpressionUUID->"71315409-8bf1-4733-aabb-377f9feb2a01"],

Cell["\<\
RawArray support in LTemplate requires Mathematica 10.4 or later.\
\>", "Text",ExpressionUUID->"725aaf69-f8c0-4b97-a381-bde120d8bfc4"],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<LTemplate`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"35c0416d-df3e-4655-8910-ffa15d860a2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"template", "=", "\[IndentingNewLine]", 
   RowBox[{"LClass", "[", 
    RowBox[{"\"\<RA\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LFun", "[", 
        RowBox[{"\"\<shuffle\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"LType", "[", 
             RowBox[{"List", ",", "Real", ",", "1"}], "]"}], ",", 
            "\"\<Constant\>\""}], "}"}], "}"}], ",", 
         RowBox[{"LType", "[", 
          RowBox[{"RawArray", ",", "\"\<Byte\>\""}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LFun", "[", 
        RowBox[{"\"\<deshuffle\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"LType", "[", 
             RowBox[{"RawArray", ",", "\"\<Byte\>\""}], "]"}], ",", 
            "\"\<Constant\>\""}], "}"}], "}"}], ",", 
         RowBox[{"LType", "[", 
          RowBox[{"List", ",", "Real", ",", "1"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"28b12d00-2a3a-4117-b361-71794c21c60d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompileTemplate", "[", "template", 
  "]"}]], "Input",ExpressionUUID->"e003c53b-e132-4175-b40c-de5aa3ebdfbc"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Current directory is: \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]], "\[InvisibleSpace]", 
   StyleBox["\<\"/Users/szhorvat/Repos/LTemplate/LTemplate/Documentation/\
Examples/RawArray\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]]}],
  SequenceForm[
   Style["Current directory is: ", 
    RGBColor[0, 0, 
     Rational[2, 3]]], 
   Style["/Users/szhorvat/Repos/LTemplate/LTemplate/Documentation/Examples/\
RawArray", 
    RGBColor[0, 0, 
     Rational[2, 3]]]],
  Editable->
   False]], "Print",ExpressionUUID->"89147b84-e437-4a32-a63e-5afd96e2a69b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Unloading library \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]], "\[InvisibleSpace]", 
   StyleBox["\<\"RA\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]], "\[InvisibleSpace]", 
   StyleBox["\<\" ...\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]]}],
  SequenceForm[
   Style["Unloading library ", 
    RGBColor[0, 0, 
     Rational[2, 3]]], 
   Style["RA", 
    RGBColor[0, 0, 
     Rational[2, 3]]], 
   Style[" ...", 
    RGBColor[0, 0, 
     Rational[2, 3]]]],
  Editable->
   False]], "Print",ExpressionUUID->"25d27c05-18c8-42c1-b98c-fd1e585088f3"],

Cell[BoxData[
 StyleBox["\<\"Generating library code ...\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 
    Rational[2, 3]],
  FrontFaceColor->RGBColor[0, 0, 
    Rational[2, 3]],
  BackFaceColor->RGBColor[0, 0, 
    Rational[2, 3]],
  GraphicsColor->RGBColor[0, 0, 
    Rational[2, 3]],
  FontColor->RGBColor[0, 0, 
    Rational[
    2, 3]]]], "Print",ExpressionUUID->"8dc2deb6-488a-41ab-b3a5-29a3557814fb"],

Cell[BoxData[
 StyleBox["\<\"Compiling library code ...\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 
    Rational[2, 3]],
  FrontFaceColor->RGBColor[0, 0, 
    Rational[2, 3]],
  BackFaceColor->RGBColor[0, 0, 
    Rational[2, 3]],
  GraphicsColor->RGBColor[0, 0, 
    Rational[2, 3]],
  FontColor->RGBColor[0, 0, 
    Rational[
    2, 3]]]], "Print",ExpressionUUID->"ee0a54d5-cb48-461e-885c-8b333d578b51"]
}, Open  ]],

Cell[BoxData["\<\"/Users/szhorvat/Library/Mathematica/SystemFiles/\
LibraryResources/MacOSX-x86-64/RA.dylib\"\>"], \
"Output",ExpressionUUID->"3b14953d-7b42-4935-96c3-6ac1db941b01"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LoadTemplate", "[", "template", 
  "]"}]], "Input",ExpressionUUID->"1b175dcc-89b6-4482-a163-55b5a6a2fb58"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obj", "=", 
   RowBox[{"Make", "[", "RA", "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"2655c6b0-63c0-4a66-a8bb-984c3949c8d5"],

Cell["This table of real numbers takes up 800 kB of storage.", \
"Text",ExpressionUUID->"62ca9139-cee5-45a1-aa49-013a1cf6684f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "100", ",", "0.001"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"6302ce63-b63d-4279-b1cf-2d1993c1ac84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ByteCount", "[", "data", 
  "]"}]], "Input",ExpressionUUID->"e637b750-883d-4865-8906-73261219ee9c"],

Cell[BoxData["800152"], \
"Output",ExpressionUUID->"4863b78b-d31e-478d-9472-f01fb4fa7fec"]
}, Open  ]],

Cell["\<\
However, there is a lot of redundancy in the numbers as they represent a \
continuous function.\
\>", "Text",ExpressionUUID->"2752208d-da2d-421e-9d0f-5d1bfd91e42a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"MaxPlotPoints", "\[Rule]", "500"}]}], 
  "]"}]], "Input",ExpressionUUID->"3ddb6a0d-c908-4c7f-a14a-5d9f90c71b9b"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxN2XlcjPv7P/DKlj05RMhkiRNRkuUgL8pSpFSyFaOIhEqW0NGQXYgQEoMs
IY0oRDWhhaR9ozLt0z5bU1H5+n2u93k8fv3T49V9d890P7uu93W/R9fZw3aL
moqKikJVReX/facvyXyV///LZg9qlI9jenJz6eePjuDJrrjz00eUUeadwske
aaLoS9WURedxpsnspsmLOso3L2FDiE7+tOhGyoIr2J21NbDHvmbK767hd+2r
Tb6/WU4NwXjBqnV7bFn25WOAYKlbzYF6yvl3cHSlyoVBpmLK5veg2TfwikPv
Svb693HSqMK1zC+PsuFDBDYeqOs1N5ny0XBYuIVlD1qYkPC/vPkx1ukGHkv5
lk552FO81D2W+EK9mPKXCBQUfhyuJ66g7BiJGQ/NTmT4iikfE2B36kGXJKsG
ynbP0TTtjuuNj02UdaLw4EH7vLfiZso1Udhp1jB5bwLLwS9QenHfl+nn2fnL
XuKHyqhbEx3Z9bpH47tavPEivVrKydF4pHlyantxJeWdMQjL9nf9+4yIst4r
aI43cMjxyKec/woTOzRyRIYplPu8gcfRec05A4V0Pw6/QVuew7JPD75SXhcL
cyg8Fx8rpjztLbwU0sKxg9j9bXuL027XenQFsfv/8R1qr27btHRWA+VTcVhd
5PZG/1YTZYt4NGpKOz3ymGfvBPhdTErPLWU5PgEXSrycfuXS+bw5Qiz3inAp
j6Xr8W4I0VG0sXD6uVrKXUK03pkyv+/MKvp9+0Tk/X5gapIrouNRibjSpVb6
PTefjvd7D/+Yw2dDw1Lo+KP3uJZkhKB5QrofFe+RX9TTcJ386/8yb+UHaNQ4
15vEMP+4D+iovRrsy2H3m/MRy7XTrG/wmb//R4iLozQd9cmLV/4RqxRmpW6n
yZOHJGwb7bxy7Sfy5oUmIWnOaK/n9Sy3J+FWitnBpW3s/NXJ+HF2r8u8eub/
Ohku5T4dgxOZ/6gU7KwY5nXGvYrO906Bn6v6vX5qZXQ8JwUWT39e0BpRQHlK
KhIRmVtVwPy/pOKGv+9eG3fy5/X8hEcyjZNanAzKez8hxk/Pz7OI/HmiT3C3
lWR6/c38zT6D4zzy/tu75M8L+wzrOxc1F3CYl1oaeuq9O3rtEPPckAZ/WUdY
bQLzjk2DQfvEQisZy1pfkBrtHxbRv5m9/hc07/SqO9OP9YuCL6iLmJefXkX+
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
ixL+D5h7iDQ=
      "]]}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 100001.}, {-0.9999999998602358, 0.9999999998313446}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{
   Automatic, 
    Automatic}]], \
"Output",ExpressionUUID->"305faab1-e6ad-424b-941d-1a13d0f9e389"]
}, Open  ]],

Cell["\<\
It is reasonable to expect this data to compress well, but BinarySerialize \
does not do very well on it. The result is 750 kB, only a 6% reduction from \
the original size.\
\>", "Text",ExpressionUUID->"db7d2b25-4b5a-4a66-99d3-c1c901095d98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinarySerialize", "[", 
  RowBox[{"data", ",", 
   RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Size\>\""}]}], 
  "]"}]], "Input",ExpressionUUID->"12e321f1-7759-4537-a82b-c85df2754486"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ByteArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"750.4 kB\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"750.4 kB\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ByteArray[<750447>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->
   False]], "Output",ExpressionUUID->"6306f9e4-ca35-4ce4-8eb3-302884341323"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ByteCount", "[", "%", "]"}], "/", 
   RowBox[{"ByteCount", "[", "data", "]"}]}], "//", 
  "N"}]], "Input",ExpressionUUID->"f3df6018-424d-4b85-8ba2-773367817370"],

Cell[BoxData["0.9380005298993191`"], \
"Output",ExpressionUUID->"1f42d380-bb2d-48da-8b54-8114334c6891"]
}, Open  ]],

Cell[TextData[{
 "The compressibility can be improved considerably by rearranging the \
underlying bytes of the data so that the first byte of each floating point \
number are stored contiguously, followed by the second bytes, and so on. This \
exposes the redundancy in the data. The ",
 Cell[BoxData[
 "shuffle"],ExpressionUUID->"96674cd3-b1e8-47ba-876b-a021153d76d7"],
 " function performs this rearranging."
}], "Text",ExpressionUUID->"633ef7d1-1ab3-4811-9c14-0a0b865c68bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"obj", "@", 
  RowBox[{
  "\"\<shuffle\>\"", "[", "data", 
   "]"}]}]], "Input",ExpressionUUID->"f199ac5e-96fc-44c8-8cc1-bce892c26b87"],

Cell[BoxData[
 TagBox[
  RowBox[{"RawArray", "[", 
   RowBox[{"\<\"UnsignedInteger8\"\>", ",", 
    RowBox[{
     StyleBox["\<\"<\"\>",
      ShowStringCharacters->False], "\[InvisibleSpace]", "800008", 
     "\[InvisibleSpace]", 
     StyleBox["\<\">\"\>",
      ShowStringCharacters->False]}]}], "]"}],
  False,
  Editable->False,
  SelectWithContents->
   True]], "Output",ExpressionUUID->"4271f9f0-fd75-469f-a37c-b8901eb6b06c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinarySerialize", "[", 
  RowBox[{
   RowBox[{"obj", "@", 
    RowBox[{"\"\<shuffle\>\"", "[", "data", "]"}]}], ",", 
   RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Size\>\""}]}], 
  "]"}]], "Input",ExpressionUUID->"21501e88-0b6a-432b-8cac-f349f7ff1351"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ByteArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"548.0 kB\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"548.0 kB\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ByteArray[<548033>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->
   False]], "Output",ExpressionUUID->"fbbe7a2c-a7f1-43cb-8523-9dd456a0bb84"]
}, Open  ]],

Cell["Now we have a 31% reduction.", \
"Text",ExpressionUUID->"cd8235af-dbda-4a42-bf58-47bae7556ca8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ByteCount", "[", "%", "]"}], "/", 
   RowBox[{"ByteCount", "[", "data", "]"}]}], "//", 
  "N"}]], "Input",ExpressionUUID->"b4bc966b-6080-432b-a863-e8ae8ca6de33"],

Cell[BoxData["0.6850310940921225`"], \
"Output",ExpressionUUID->"282ba1b8-236a-477b-9925-33df390fe4d1"]
}, Open  ]],

Cell["\<\
The compressibility could be improved further (at the cost of some numerical \
accuracy) by storing only the differences between the consecutive numbers.  \
The following functions implement this:\
\>", "Text",ExpressionUUID->"6132506c-9377-459f-ac60-98e95b1cea24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"compress", "[", 
   RowBox[{"data_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"VectorQ", "[", 
       RowBox[{"#", ",", "Developer`MachineRealQ"}], "]"}], "&"}], ")"}]}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"BinarySerialize", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"obj", "@", 
     RowBox[{"\"\<shuffle\>\"", "[", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Differences", "[", "data", "]"}], ",", 
        RowBox[{"First", "[", "data", "]"}]}], "]"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Size\>\""}]}], 
   "\[IndentingNewLine]", 
   "]"}]}]], "Input",ExpressionUUID->"a0b56d69-1359-4221-b791-0450443bfabf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"decompress", "[", "bytes_", "]"}], ":=", 
  RowBox[{"Accumulate", "[", 
   RowBox[{"obj", "@", 
    RowBox[{"\"\<deshuffle\>\"", "[", 
     RowBox[{"BinaryDeserialize", "[", "bytes", "]"}], "]"}]}], 
   "]"}]}]], "Input",ExpressionUUID->"afbcff7b-0c29-4e83-92fd-f422abb5822f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compress", "[", "data", 
  "]"}]], "Input",ExpressionUUID->"33d3fee4-c860-468b-82f8-b8701a6fbabf"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ByteArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"440.0 kB\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"440.0 kB\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ByteArray[<440021>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->
   False]], "Output",ExpressionUUID->"566d3dab-b4a6-474d-be7f-231c09ff246b"]
}, Open  ]],

Cell["This way we could achieve a 45% reduction in size.", \
"Text",ExpressionUUID->"5600a668-09b5-4540-b2f7-de4764c469ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ByteCount", "@", 
    RowBox[{"compress", "[", "data", "]"}]}], "/", 
   RowBox[{"ByteCount", "[", "data", "]"}]}], "//", 
  "N"}]], "Input",ExpressionUUID->"4ec69f1b-8cbf-43f0-8e02-2bbcd4742ce3"],

Cell[BoxData["0.5500417420690069`"], \
"Output",ExpressionUUID->"af90dac3-cbe9-44aa-a801-f16370f0bbe6"]
}, Open  ]],

Cell["For practical purposes, the accuracy loss is negligible.", \
"Text",ExpressionUUID->"e33c89ed-85d7-4c78-9419-0a1facb233b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"decompress", "@", 
     RowBox[{"compress", "[", "data", "]"}]}], "-", "data"}], "]"}], "//", 
  "Max"}]], "Input",ExpressionUUID->"cf050699-40c0-45f3-9161-65ed31ce042a"],

Cell[BoxData["4.336808689942018`*^-19"], \
"Output",ExpressionUUID->"48e262ee-e1e1-4111-9858-f20411638ad6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working directly with ByteArrays", \
"Subsection",ExpressionUUID->"4aa0cdb4-c584-4797-9452-89f5903d906c"],

Cell[TextData[{
 Cell[BoxData[
 "LibraryFunctionLoad"],ExpressionUUID->
  "ac735e6a-3822-4a60-814e-2eee19f525dd"],
 " does support ",
 Cell[BoxData[
 "ByteArray"],ExpressionUUID->"eaf3c27c-9088-4c33-be0e-dd45e529bb2d"],
 " as a type specification. The corresponding type in C is an MRawArray of \
rank 1 and element type ",
 Cell[BoxData[
 "\"\<Byte\>\""],ExpressionUUID->"487d1c58-0e13-40e0-9d26-bf9885ea0f52"],
 ". However, this feature is undocumented and\[LongDash]as of Mathematica \
11.2\[LongDash]not fully fleshed out. For example, ",
 Cell[BoxData[
 "\"\<Constant\>\""],ExpressionUUID->"0b8d5db5-165f-4f25-9073-f0aeb99c7c1c"],
 " passing does not work."
}], "Text",ExpressionUUID->"4813173e-92e8-4197-bc53-0a731a49af4a"],

Cell[TextData[{
 "LTemplate does correspondingly accept ",
 Cell[BoxData[
  RowBox[{"LType", "[", "ByteArray", "]"}]],ExpressionUUID->
  "89db82d2-5ae7-4623-a78b-178c9602fc60"],
 " or ",
 Cell[BoxData[
 "ByteArray"],ExpressionUUID->"2765237d-ae25-4403-a488-938637985514"],
 " as a type specification too, and treats ByteArrays as ",
 StyleBox["mma::RawArrayRef<uint8_t>", "Program"],
 " in C++. This allows passing and returning ByteArrays directly, without a \
need for explicit conversion."
}], "Text",ExpressionUUID->"9e5f665b-a668-476e-9d4d-b557e99d125e"],

Cell["\<\
The following example loads the same library using a different type \
annotation, so that results can be obtained directly as ByteArray.\
\>", "Text",ExpressionUUID->"4e9c6fa3-fcb8-40ae-8716-37b98194b300"],

Cell[BoxData[
 RowBox[{"UnloadTemplate", "[", "template", 
  "]"}]], "Input",ExpressionUUID->"d0a4754e-036b-4648-82fa-9607ce3eabd9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"template", "=", "\[IndentingNewLine]", 
   RowBox[{"LClass", "[", 
    RowBox[{"\"\<RA\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LFun", "[", 
        RowBox[{"\"\<shuffle\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"LType", "[", 
             RowBox[{"List", ",", "Real", ",", "1"}], "]"}], ",", 
            "\"\<Constant\>\""}], "}"}], "}"}], ",", "ByteArray"}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"LFun", "[", 
        RowBox[{"\"\<deshuffle\>\"", ",", 
         RowBox[{"{", "ByteArray", "}"}], ",", 
         RowBox[{"LType", "[", 
          RowBox[{"List", ",", "Real", ",", "1"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"206b3e63-9596-491a-9504-3a4d2b58bd64"],

Cell[BoxData[
 RowBox[{"LoadTemplate", "[", "template", 
  "]"}]], "Input",ExpressionUUID->"d9e5f667-7ede-4ccc-b802-f1c7d10325f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obj", "=", 
   RowBox[{"Make", "[", "RA", "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"95046af6-0b6b-4781-b317-d84897eb6d0e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"obj", "@", 
  RowBox[{
  "\"\<shuffle\>\"", "[", "data", 
   "]"}]}]], "Input",ExpressionUUID->"14d3560b-8f42-496d-b1ae-848288b7f507"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ByteArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"800.0 kB\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"800.0 kB\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ByteArray[<800008>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->
   False]], "Output",ExpressionUUID->"9fd47c35-d689-444d-b000-39c31cf4e0ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BinarySerialize", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Size\>\""}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"data", ",", 
    RowBox[{"obj", "@", 
     RowBox[{"\"\<shuffle\>\"", "[", "data", "]"}]}]}], 
   "}"}]}]], "Input",ExpressionUUID->"859d4c21-52ef-47d6-aa5f-40881e5fdaeb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["ByteArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                GridBox[{{
                   TagBox["\"750.4 kB\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                GridBox[{{
                   TagBox["\"750.4 kB\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("ByteArray[<750447>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["ByteArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                GridBox[{{
                   TagBox["\"548.0 kB\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                GridBox[{{
                   TagBox["\"548.0 kB\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("ByteArray[<548017>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], 
  "}"}]], "Output",ExpressionUUID->"dccc928c-686d-4ba0-bb3f-6923d93281cc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{878, 722},
WindowMargins->{{42, Automatic}, {Automatic, 55}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
CommonDefaultFormatTypes->{"TextInline"->StandardForm},
TrackCellChangeTimes->False,
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, \
2017)",
StyleDefinitions->"Default.nb"
]

